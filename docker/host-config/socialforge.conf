# Social Foger - Nginx Configuration
# Place this file: /etc/nginx/sites-available/socialfoger

upstream backend {
    server 127.0.0.1:8080;
}

upstream frontend {
    server 127.0.0.1:5173;
}

upstream centrifugo {
    server 127.0.0.1:8000;
}

upstream grafana {
    server 127.0.0.1:3001;
}

upstream minio {
    server 127.0.0.1:9000;
}

upstream minio_console {
    server 127.0.0.1:9001;
}

# Main server
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name 164.92.78.16;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Frontend Application
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Backend API
    location /api {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Centrifugo WebSocket
    location /centrifugo {
        proxy_pass http://centrifugo;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_buffering off;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }

    # Health check
    location /health {
        proxy_pass http://backend/health;
        access_log off;
    }

    # Grafana Monitoring (Protected)
    location /monitoring {
        auth_basic "Monitoring Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        rewrite ^/monitoring(/.*)$ $1 break;
        proxy_pass http://grafana;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # MinIO Storage
    location /storage {
        rewrite ^/storage(/.*)$ $1 break;
        proxy_pass http://minio;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        client_max_body_size 100M;
    }

    # MinIO Console (Protected)
    location /minio-console {
        auth_basic "MinIO Console";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        rewrite ^/minio-console(/.*)$ $1 break;
        proxy_pass http://minio_console;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }
}